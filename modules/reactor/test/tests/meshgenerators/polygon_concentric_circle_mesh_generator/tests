[Tests]
  design = 'meshgenerators/PolygonConcentricCircleMeshGenerator.md'
  issues = '#18628 #20514'
  [back_only]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_back_only.e'
    cli_args = 'Mesh/gen/background_block_ids="30 35" Mesh/gen/background_block_names="back_in back_out" --mesh-only "poly_2d_back_only.e"'
    requirement ='The system shall generate a hexagon mesh without rings and ducts.'
    recover = false
  []
  [back_only_flat_up]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_back_only_flat_up.e'
    cli_args = 'Mesh/gen/background_block_ids="30 35"
                Mesh/gen/background_block_names="back_in back_out"
                Mesh/gen/flat_side_up=true
                --mesh-only "poly_2d_back_only_flat_up.e"'
    requirement ='The system shall generate a hexagon mesh without rings and ducts with one of its flat side facing up.'
    recover = false
  []
  [back_only_one_layer]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_back_only_one_layer.e'
    cli_args = 'Mesh/gen/background_intervals=1
                Mesh/gen/background_block_ids=30
                Mesh/gen/background_block_names="back"
                Mesh/gen/interface_boundary_id_shift=100
                --mesh-only "poly_2d_back_only_one_layer.e"'
    requirement ='The system shall generate a hexagon mesh with only one radial layer of elements without rings and ducts.'
    recover = false
  []
  [rings]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_rings.e'
    cli_args = 'Mesh/gen/background_block_ids="30" Mesh/gen/background_block_names="back"
                Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                Mesh/gen/ring_block_ids="10 15 20" Mesh/gen/ring_block_names="center_in center outer_ring"
                Mesh/gen/uniform_mesh_on_sides=true
                Mesh/gen/interface_boundary_names="int1 int2"
                --mesh-only "poly_2d_rings.e"'
    requirement ='The system shall generate a hexagon mesh with rings.'
    recover = false
  []
  [ducts]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_ducts.e'
    cli_args = 'Mesh/gen/background_block_ids="30 35" Mesh/gen/background_block_names="back_in back_out"
                Mesh/gen/duct_sizes="3.5 4.0" Mesh/gen/duct_intervals="2 2"
                Mesh/gen/duct_block_ids="1500 1600" Mesh/gen/duct_block_names="inner_duct outer_duct"
                Mesh/gen/duct_sizes_style="apothem"
                --mesh-only "poly_2d_ducts.e"'
    requirement ='The system shall generate a hexagon mesh with ducts.'
    recover = false
  []
  [full]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_full.e'
    cli_args = 'Mesh/gen/background_block_ids="30" Mesh/gen/background_block_names="back"
                Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                Mesh/gen/ring_block_ids="10 15 20" Mesh/gen/ring_block_names="center_in center outer_ring"
                Mesh/gen/duct_sizes="3.5 4.0" Mesh/gen/duct_intervals="2 2"
                Mesh/gen/duct_block_ids="1500 1600" Mesh/gen/duct_block_names="inner_duct outer_duct"
                Mesh/gen/duct_sizes_style="apothem"
                --mesh-only "poly_2d_full.e"'
    requirement ='The system shall generate a hexagon mesh with rings and ducts.'
    recover = false
  []
  [full_quad]
    type = 'Exodiff'
    input = 'poly_2d.i'
    exodiff = 'poly_2d_full_quad.e'
    cli_args = 'Mesh/gen/background_block_ids="30" Mesh/gen/background_block_names="back"
                Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                Mesh/gen/ring_block_ids="10 15 20" Mesh/gen/ring_block_names="center_in center outer_ring"
                Mesh/gen/duct_sizes="3.5 4.0" Mesh/gen/duct_intervals="2 2"
                Mesh/gen/duct_block_ids="1500 1600" Mesh/gen/duct_block_names="inner_duct outer_duct"
                Mesh/gen/duct_sizes_style="apothem" Mesh/gen/quad_center_elements=true
                --mesh-only "poly_2d_full_quad.e"'
    requirement ='The system shall generate a hexagon mesh with rings, ducts and quad central elements.'
    recover = false
  []
  [err_quad_diff_sector_nums]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/background_block_ids="30 35" Mesh/gen/background_block_names="back_in back_out"
                Mesh/gen/num_sectors_per_side="4 4 4 4 6" Mesh/gen/quad_center_elements=true
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be false if different side sector numbers are set.'
    requirement ="The system shall throw an error if num_sectors_per_side and quad_center_elements are not compatible."
  []
  [err_interface_ids_length]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/interface_boundary_names="int1"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'If provided, the length of this parameter must be identical to the total number of interfaces.'
    requirement ="The system shall throw an error if interface_boundary_names has an incorrect length."
  []
  [err_background_block_ids_1]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/background_block_ids="20 30"
                Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be either unset or have a unity length when ring_radii is provided or background_intervals is unity.'
    requirement ="The system shall throw an error if background_block_ids has more than one element when the mesh has ring(s)."
  []
  [err_background_block_names_1]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/background_block_names="back1 back2"
                Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be either unset or have a unity length when ring_radii is provided or background_intervals is unity.'
    requirement ="The system shall throw an error if background_block_names has more than one element when the mesh has ring(s)."
  []
  [err_background_block_ids_2]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/background_block_ids="20"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be either unset or have a length of two when ring_radii is not provided and background_intervals is not unity.'
    requirement ="The system shall throw an error if background_block_ids has a length other than zero or two when the mesh does not have rings and background_intervals equals one."
  []
  [err_background_block_names_2]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/background_block_names="back1"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be either unset or have a length of two when ring_radii is not provided and background_intervals is not unity.'
    requirement ="The system shall throw an error if background_block_names has a length other than zero or two when the mesh does not have rings and background_intervals equals one."
  []
  [err_block_ids_with_one_name]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/background_block_names="back back" --mesh-only "poly_2d_err.e"'
    expect_err = 'blocks with different ids cannot have the same block name.'
    requirement ='The system shall throw an error of multiple block ids share a single block name.'
  []
  [err_num_sectors_per_side_size]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/num_sectors_per_side="4 4"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must have a length that is consistent with num_sides.'
    requirement ="The system shall throw an error if size of num_sectors_per_side is not num_sides."
  []
  [err_odd_num_sectors_per_side]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/num_sectors_per_side="3 3 3 3 3"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be even.'
    requirement ="The system shall throw an error if num_sectors_per_side elements are not all even."
  []
  [err_ring_radii_length]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter and ring_intervals must have the same length.'
    requirement ="The system shall throw an error if ring_radii and ring_intervals have different sizes."
  []
  [err_ring_block_ids]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                Mesh/gen/ring_block_ids="20"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must have the appropriate size if it is provided.'
    requirement ="The system shall throw an error if ring_block_ids size is not consistent with number of rings in the mesh."
  []
  [err_ring_block_names]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                Mesh/gen/ring_block_names="ring1"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must have the appropriate size if it is set.'
    requirement ="The system shall throw an error if ring_block_names size is not consistent with number of rings in the mesh."
  []
  [err_descend_ring_radii]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/ring_radii="2 1" Mesh/gen/ring_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be strictly ascending.'
    requirement ="The system shall throw an error if ring_radii is not strictly ascending."
  []
  [err_oversize_ring_radii]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/ring_radii="1 6" Mesh/gen/ring_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'Elements of this parameter must be smaller than polygon apothem'
    requirement ="The system shall throw an error if rings are bigger than the polygon."
  []
  [err_duct_sizes_length]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/duct_sizes="3.5 4.0" Mesh/gen/duct_intervals="2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter and duct_intervals must have the same length.'
    requirement ="The system shall throw an error if duct_sizes and duct_intervals have different sizes."
  []
  [err_duct_block_ids]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/duct_sizes="3.5 4.0" Mesh/gen/duct_intervals="2 2"
                Mesh/gen/duct_block_ids="20"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must have the same length as duct_intervals if set.'
    requirement ="The system shall throw an error if duct_block_ids size is not consistent with number of ducts in the mesh."
  []
  [err_duct_block_names]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/duct_sizes="3.5 4.0" Mesh/gen/duct_intervals="2 2"
                Mesh/gen/duct_block_names="duct1"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must have the same length as duct_intervals if set.'
    requirement ="The system shall throw an error if duct_block_names size is not consistent with number of ducts in the mesh."
  []
  [err_descend_duct_sizes]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/duct_sizes="3.5 3.4" Mesh/gen/duct_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be strictly ascending.'
    requirement ="The system shall throw an error if duct_sizes is not strictly ascending."
  []
  [err_undersize_duct_sizes]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/ring_radii="2 3" Mesh/gen/ring_intervals="2 2"
                Mesh/gen/duct_sizes="2.5 4.0" Mesh/gen/duct_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must be positive and ensures no overlapping with rings.'
    requirement ="The system shall throw an error if duct_sizes is non-positive or is low enough to be overlapped with rings."
  []
  [err_oversize_duct_sizes]
    type = 'RunException'
    input = 'poly_2d.i'
    cli_args = 'Mesh/gen/duct_sizes="3.5 8.0" Mesh/gen/duct_intervals="2 2"
                --mesh-only "poly_2d_err.e"'
    expect_err = 'This parameter must ensure that ducts are smaller than the polygon size.'
    requirement ="The system shall throw an error if duct_sizes is bigger than the polygon."
  []
[]
